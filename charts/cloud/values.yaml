nodeSelector: {}
podAnnotations:
  app: protopie

image:
  cloud:
    api:
      pullPolicy: IfNotPresent
      repository: protopie/enterprise-onpremises
      tag: api-15.2.0
    web:
      pullPolicy: IfNotPresent
      repository: protopie/enterprise-onpremises
      tag: web-15.2.0
    userResearch:
      pullPolicy: IfNotPresent
      repository: 310455165573.dkr.ecr.ap-northeast-2.amazonaws.com/enterprise-cloud
      tag: user-testing-11.0.1
  analytics:
    web:
      pullPolicy: IfNotPresent
      repository: 310455165573.dkr.ecr.ap-northeast-2.amazonaws.com/analytics-enterprise
      tag: web-1.0.1
    api:
      pullPolicy: IfNotPresent
      repository: 310455165573.dkr.ecr.ap-northeast-2.amazonaws.com/analytics-enterprise
      tag: api-1.0.1

ingress:
  # If you want to use a specific ingress class, set the value here.
  ingressClassName: ""
  enabled: false
  host: ""
  annotations: {}
  # To enable certificate, set the value to true.
  tls:
    enabled: false

# eg) for private docker image registry (imagePullSecrets)
# imageCredentials:
#   registry: <repo>
#   username: <username>
#   password: <pw>
#   email: <email>
# OR
# imagePullSecrets:
#   - name: <protopie-private-registry>

imageCredentials: null
imagePullSecrets: null

userResearch:
  enabled: false
  renewal: false

analytics:
  enabled: false
  web:
    env:
      DEBUG: DO_NOT_DEFINE_THIS_VARIABLE_ON_PRODUCT
      COOKIE_NAME: AE_TOKEN
      URL_BASE_PATHNAME: "/analytics/"
      AE_API_USER_ID: "admin"
      AE_API_USER_PASS: "eLgt4Wj1X7nHzu5tKuUv"
  api:
    env:
      DJANGO_SECRET_KEY: django-insecure-w5ax&wef5c9a(_7g_@&h1e13+8x-1t=3l1$$28&w4d4ndmd!xj(
      ROOT_PATH: "/api/analytics/"
      DEBUG: DO_NOT_DEFINE_THIS_VARIABLE_ON_PRODUCT
      ALLOWED_HOSTS: "*"

cloud:
  host: ""
  share:
    enabled: false
    host: ""
  api:
    replicas: 1
  web:
    replicas: 1
  volumes:
    # If left empty, the default storage class will be used
    storageClassName: ""
    # Default accessMode is ReadWriteMany
    accessMode: ""
    usePVC: true
    upload: 50Gi
    logs: 5Gi
    download: 10Gi
    default: 10Gi
  config:
    yml: "you can set content by --set-file cloud.config.yml=config.yml"
  license:
    pem: "you can set content by --set-file cloud.license.pem=license.pem"
  # Europ/Berlin 5 AM - UTC 3 AM - 0 3 * * *
  # America/NewYork 6 AM - UTC 10 AM - 0 10 * * *
  # America/California 3 AM - UTC 10 AM - 0 10 * * *
  # Asia/Mumbai 5 AM - UTC 11:30 PM - 30 11 * * *
  # Asia/Seoul 5 AM - UTC 20 PM - 0 20 * * *
  cleanUpSchedule: "* 20 * * *"

nginx:
  replicas: 1

db:
  volume: 20Gi
  # If left empty, the default storage class will be used
  storageClassName: ""
  env:
    DB_HOST: db
    DB_PORT: 5432
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: postgres
    DB_DATABASE: proteam
    DB_DATABASE_ANALYTICS: analytics
    DB_READ_USER: protopie_r
    DB_WRITE_USER: protopie_w
    DB_READ_PASSWORD: proteam_r
    DB_WRITE_PASSWORD: proteam_w
    PGDATA: "/data/pgdata"
